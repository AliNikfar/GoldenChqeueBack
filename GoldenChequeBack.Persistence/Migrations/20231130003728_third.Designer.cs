// <auto-generated />
using System;
using GoldenChequeBack.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GoldenChequeBack.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231130003728_third")]
    partial class third
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GoldenChequeBack.Domain.Entities.Bank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Author")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LastChangeUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RegisterUser")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("GoldenChequeBack.Domain.Entities.BaseInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Author")
                        .HasColumnType("bit");

                    b.Property<bool?>("BoolValue")
                        .HasColumnType("bit");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IntValue")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LastChangeUser")
                        .HasColumnType("int");

                    b.Property<long?>("LongValue")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RegisterUser")
                        .HasColumnType("int");

                    b.Property<string>("StringValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("BaseInfoes");
                });

            modelBuilder.Entity("GoldenChequeBack.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Author")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LastChangeUser")
                        .HasColumnType("int");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RegisterUser")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("95a04c7c-781c-4eaf-a713-5f923dd6ed09"),
                            Author = true,
                            LastChangeDate = new DateTime(2023, 11, 30, 4, 7, 27, 949, DateTimeKind.Local).AddTicks(5271),
                            LastChangeUser = 1,
                            RegisterDate = new DateTime(2023, 11, 30, 4, 7, 27, 949, DateTimeKind.Local).AddTicks(5274),
                            RegisterUser = 1,
                            Title = "محصولات",
                            Visable = true
                        },
                        new
                        {
                            Id = new Guid("13109421-3994-4530-9aea-3094046fb63e"),
                            Author = true,
                            LastChangeDate = new DateTime(2023, 11, 30, 4, 7, 27, 949, DateTimeKind.Local).AddTicks(5307),
                            LastChangeUser = 1,
                            ParentId = new Guid("95a04c7c-781c-4eaf-a713-5f923dd6ed09"),
                            RegisterDate = new DateTime(2023, 11, 30, 4, 7, 27, 949, DateTimeKind.Local).AddTicks(5310),
                            RegisterUser = 1,
                            Title = "الکترونیکی",
                            Visable = true
                        },
                        new
                        {
                            Id = new Guid("8f8c943e-6031-4721-8b47-7bab4216bb0e"),
                            Author = true,
                            LastChangeDate = new DateTime(2023, 11, 30, 4, 7, 27, 949, DateTimeKind.Local).AddTicks(5334),
                            LastChangeUser = 1,
                            ParentId = new Guid("95a04c7c-781c-4eaf-a713-5f923dd6ed09"),
                            RegisterDate = new DateTime(2023, 11, 30, 4, 7, 27, 949, DateTimeKind.Local).AddTicks(5335),
                            RegisterUser = 1,
                            Title = "غذایی",
                            Visable = true
                        });
                });

            modelBuilder.Entity("GoldenChequeBack.Domain.Entities.Cheque", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Author")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ChequeDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ChequePrice")
                        .HasColumnType("int");

                    b.Property<int>("ChequeStatus")
                        .HasColumnType("int");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FactorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Kind")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LastChangeUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("PassDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RegisterUser")
                        .HasColumnType("int");

                    b.Property<Guid>("SahabChequeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ShobeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ShomareChek")
                        .HasColumnType("int");

                    b.Property<int>("ShomareHesab")
                        .HasColumnType("int");

                    b.Property<bool>("Visable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FactorId");

                    b.HasIndex("SahabChequeId");

                    b.HasIndex("ShobeId");

                    b.ToTable("Cheques");
                });

            modelBuilder.Entity("GoldenChequeBack.Domain.Entities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Author")
                        .HasColumnType("bit");

                    b.Property<string>("CityCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LastChangeUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OstanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RegisterUser")
                        .HasColumnType("int");

                    b.Property<bool>("Visable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("OstanId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("GoldenChequeBack.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Author")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<Guid>("CustomerRateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LastChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LastChangeUser")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("MaxBuyPrice")
                        .HasColumnType("int");

                    b.Property<string>("Mob1")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Mob2")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Mob3")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNum")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RegisterUser")
                        .HasColumnType("int");

                    b.Property<bool>("Visable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CustomerRateId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("GoldenChequeBack.Domain.Entities.CustomerRate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Author")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LastChangeUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RegisterUser")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Visable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CustomerRates");
                });

            modelBuilder.Entity("GoldenChequeBack.Domain.Entities.Factor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Author")
                        .HasColumnType("bit");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("FactorBeforePrice")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("FactorKharidDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FactorSodDarsad")
                        .HasColumnType("int");

                    b.Property<long>("FactorSumObjectsPrice")
                        .HasColumnType("bigint");

                    b.Property<long>("FactorSumPrice")
                        .HasColumnType("bigint");

                    b.Property<int>("Kind")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LastChangeUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RegisterUser")
                        .HasColumnType("int");

                    b.Property<bool>("Visable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Factors");
                });

            modelBuilder.Entity("GoldenChequeBack.Domain.Entities.FactorObjects", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Author")
                        .HasColumnType("bit");

                    b.Property<Guid?>("FactorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LastChangeUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RegisterUser")
                        .HasColumnType("int");

                    b.Property<bool>("Visable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FactorId");

                    b.ToTable("FactorObjects");
                });

            modelBuilder.Entity("GoldenChequeBack.Domain.Entities.Ghest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Author")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FactorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LastChangeUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("PassDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RegisterUser")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<bool>("Visable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FactorId");

                    b.ToTable("Ghests");
                });

            modelBuilder.Entity("GoldenChequeBack.Domain.Entities.ImageSelector", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Author")
                        .HasColumnType("bit");

                    b.Property<string>("FileExtention")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LastChangeUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RegisterUser")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("GoldenChequeBack.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Author")
                        .HasColumnType("bit");

                    b.Property<int>("BuyPrice")
                        .HasColumnType("int");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LastChangeUser")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RegisterUser")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Visable")
                        .HasColumnType("bit");

                    b.Property<int>("WareHouseStock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ImageId");

                    b.HasIndex("UnitId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("GoldenChequeBack.Domain.Entities.Shobe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Author")
                        .HasColumnType("bit");

                    b.Property<Guid>("BankId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LastChangeUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RegisterUser")
                        .HasColumnType("int");

                    b.Property<bool>("Visable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("Shobes");
                });

            modelBuilder.Entity("GoldenChequeBack.Domain.Entities.State", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Author")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LastChangeUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RegisterUser")
                        .HasColumnType("int");

                    b.Property<bool>("Visable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("States");
                });

            modelBuilder.Entity("GoldenChequeBack.Domain.Entities.Unit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Author")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LastChangeUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantityPerUnit")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RegisterUser")
                        .HasColumnType("int");

                    b.Property<bool>("Visable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Units");

                    b.HasData(
                        new
                        {
                            Id = new Guid("20732e16-ffc9-44be-bb82-6df798ca7296"),
                            Author = true,
                            LastChangeDate = new DateTime(2023, 11, 30, 4, 7, 27, 949, DateTimeKind.Local).AddTicks(5004),
                            LastChangeUser = 1,
                            Name = "بسته",
                            QuantityPerUnit = 10,
                            RegisterDate = new DateTime(2023, 11, 30, 4, 7, 27, 949, DateTimeKind.Local).AddTicks(5020),
                            RegisterUser = 1,
                            Visable = true
                        });
                });

            modelBuilder.Entity("GoldenChequeBack.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Author")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LastChangeUser")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RegisterUser")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("UserName")
                        .HasColumnType("int");

                    b.Property<bool>("Visable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GoldenChequeBack.Domain.Entities.Cheque", b =>
                {
                    b.HasOne("GoldenChequeBack.Domain.Entities.Factor", "Factor")
                        .WithMany()
                        .HasForeignKey("FactorId");

                    b.HasOne("GoldenChequeBack.Domain.Entities.Customer", "SahabCheque")
                        .WithMany()
                        .HasForeignKey("SahabChequeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GoldenChequeBack.Domain.Entities.Shobe", "Shobe")
                        .WithMany()
                        .HasForeignKey("ShobeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factor");

                    b.Navigation("SahabCheque");

                    b.Navigation("Shobe");
                });

            modelBuilder.Entity("GoldenChequeBack.Domain.Entities.City", b =>
                {
                    b.HasOne("GoldenChequeBack.Domain.Entities.State", "Ostan")
                        .WithMany()
                        .HasForeignKey("OstanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ostan");
                });

            modelBuilder.Entity("GoldenChequeBack.Domain.Entities.Customer", b =>
                {
                    b.HasOne("GoldenChequeBack.Domain.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GoldenChequeBack.Domain.Entities.CustomerRate", "CustomerRate")
                        .WithMany()
                        .HasForeignKey("CustomerRateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("CustomerRate");
                });

            modelBuilder.Entity("GoldenChequeBack.Domain.Entities.Factor", b =>
                {
                    b.HasOne("GoldenChequeBack.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("GoldenChequeBack.Domain.Entities.FactorObjects", b =>
                {
                    b.HasOne("GoldenChequeBack.Domain.Entities.Factor", null)
                        .WithMany("FactorObjectList")
                        .HasForeignKey("FactorId");
                });

            modelBuilder.Entity("GoldenChequeBack.Domain.Entities.Ghest", b =>
                {
                    b.HasOne("GoldenChequeBack.Domain.Entities.Factor", "Factor")
                        .WithMany("GhestList")
                        .HasForeignKey("FactorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Factor");
                });

            modelBuilder.Entity("GoldenChequeBack.Domain.Entities.Product", b =>
                {
                    b.HasOne("GoldenChequeBack.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GoldenChequeBack.Domain.Entities.ImageSelector", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.HasOne("GoldenChequeBack.Domain.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Image");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("GoldenChequeBack.Domain.Entities.Shobe", b =>
                {
                    b.HasOne("GoldenChequeBack.Domain.Entities.Bank", "Bank")
                        .WithMany("ShobeList")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("GoldenChequeBack.Domain.Entities.Bank", b =>
                {
                    b.Navigation("ShobeList");
                });

            modelBuilder.Entity("GoldenChequeBack.Domain.Entities.Factor", b =>
                {
                    b.Navigation("FactorObjectList");

                    b.Navigation("GhestList");
                });
#pragma warning restore 612, 618
        }
    }
}
